
import java.io.IOException;



import java.text.ParseException;



import java.text.SimpleDateFormat;



import java.util.Calendar;



import java.util.Date;





import org.apache.hadoop.conf.Configuration;



import org.apache.hadoop.fs.Path;



import org.apache.hadoop.io.IntWritable;



import org.apache.hadoop.io.LongWritable;



import org.apache.hadoop.io.Text;



import org.apache.hadoop.mapreduce.Job;



import org.apache.hadoop.mapreduce.Mapper;



import org.apache.hadoop.mapreduce.Reducer;



import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;



import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;





public class test5 {





public static class MovieInterestMapper extends Mapper<LongWritable, Text, Text, IntWritable> {





private final static SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");



private final static SimpleDateFormat yearMonthFormatter = new SimpleDateFormat("yyyy-MM");





public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {



String[] fields = value.toString().split(",");



if (fields.length == 4) {



String userId = fields[0];



String tag = fields[2];



String timeId = fields[3];





try {



Date date = dateFormatter.parse(timeId);



String yearMonth = yearMonthFormatter.format(date);



context.write(new Text(userId + "," + yearMonth), new IntWritable(1));



} catch (ParseException e) {



e.printStackTrace();



}



}



}



}





public static class MovieInterestReducer extends Reducer<Text, IntWritable, Text, IntWritable> {





public void reduce(Text key, Iterable<IntWritable> values, Context context)



throws IOException, InterruptedException {



int sum = 0;



for (IntWritable val : values) {



sum += val.get();



}



context.write(key, new IntWritable(sum));



}



}





public static void main(String[] args) throws Exception {



Configuration conf = new Configuration();



Job job = Job.getInstance(conf, "Movie Interest Trend");



job.setJarByClass(test5.class);



job.setMapperClass(MovieInterestMapper.class);



job.setReducerClass(MovieInterestReducer.class);



job.setOutputKeyClass(Text.class);



job.setOutputValueClass(IntWritable.class);



FileInputFormat.addInputPath(job, new Path(args[0]));



FileOutputFormat.setOutputPath(job, new Path(args[1]));



System.exit(job.waitForCompletion(true) ? 0 : 1);



}



}





