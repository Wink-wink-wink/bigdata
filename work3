

import java.io.IOException;

import java.text.SimpleDateFormat;

import java.util.Calendar;

import java.util.Date;


import org.apache.hadoop.conf.Configuration;

import org.apache.hadoop.fs.Path;

import org.apache.hadoop.io.FloatWritable;

import org.apache.hadoop.io.Text;

import org.apache.hadoop.mapreduce.Job;

import org.apache.hadoop.mapreduce.Mapper;

import org.apache.hadoop.mapreduce.Reducer;

import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;

import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;


public class test3 {


    public static class RatingMapper extends Mapper<Object, Text, Text, Text> {


        private Text movieId = new Text();

        private Text yearMonth = new Text();

        private FloatWritable rating = new FloatWritable();


        @Override

        public void map(Object key, Text value, Context context) throws IOException, InterruptedException {

            String[] parts = value.toString().split("\\s+");

            if (parts.length == 4) {

                movieId.set(parts[1]);

                rating.set(Float.parseFloat(parts[2]));

                String timeId = parts[3];

                String[] dateParts = timeId.split("-");

                if (dateParts.length == 3) {

                    String yearMonthStr = dateParts[0] + "-" + dateParts[1];

                    yearMonth.set(yearMonthStr);

                    context.write(new Text(movieId.toString() + "," + yearMonth.toString()), new Text(rating.toString()));

                }

            }

        }

    }


    public static class RatingReducer extends Reducer<Text, Text, Text, FloatWritable> {


        @Override

        public void reduce(Text key, Iterable<Text> values, Context context)

                throws IOException, InterruptedException {

            float sum = 0;

            int count = 0;

            for (Text val : values) {

                sum += Float.parseFloat(val.toString());

                count++;

            }

            float averageRating = sum / count;

            context.write(key, new FloatWritable(averageRating));

        }

    }


    public static void main(String[] args) throws Exception {

        Configuration conf = new Configuration();

        Job job = Job.getInstance(conf, "movie rating trend");

        job.setJarByClass(test3.class);

        job.setMapperClass(RatingMapper.class);

        job.setReducerClass(RatingReducer.class);

        job.setOutputKeyClass(Text.class);

        job.setOutputValueClass(Text.class);

        FileInputFormat.addInputPath(job, new Path(args[0]));

        FileOutputFormat.setOutputPath(job, new Path(args[1]));

        System.exit(job.waitForCompletion(true) ? 0 : 1);

    }

}



